.l1exsjoj{display:-webkit-box;display:-webkit-flex;display:-ms-flexbox;display:flex;-webkit-flex-direction:column;-ms-flex-direction:column;flex-direction:column;-webkit-align-items:center;-webkit-box-align:center;-ms-flex-align:center;align-items:center;-webkit-box-pack:start;-webkit-justify-content:flex-start;-ms-flex-pack:start;justify-content:flex-start;text-align:center;border-radius:12px;border:1px solid #ED707D;padding:1.6rem;-webkit-transition:all 280ms ease;transition:all 280ms ease;box-shadow:0px 1.5px 3.8px rgba(0,0,0,0.03), 0px 6px 15px rgba(0,0,0,0.06);}.l1exsjoj:hover{box-shadow:0.9px 0.9px 2px rgba(0,0,0,0.009), 3.1px 2.9px 6.7px rgba(97,66,66,0.016), 2px 13px 30px rgba(0,0,0,0.12);}.l1exsjoj:hover svg{fill:#ED707D;}
.d3qmxio{min-width:32px;min-height:32px;margin-bottom:0.8rem;}
.chituyu{fill:#BA6980;-webkit-transition:all 280ms ease;transition:all 280ms ease;}
.hyo3bnd{font-size:1.8rem;}
.s1buzcyb{font-size:1.48rem;}
.dmv8uqg{display:-webkit-box;display:-webkit-flex;display:-ms-flexbox;display:flex;-webkit-box-pack:center;-webkit-justify-content:center;-ms-flex-pack:center;justify-content:center;margin:0 auto;width:100%;-webkit-flex:1;-ms-flex:1;flex:1;}
.dpcx27q{display:-webkit-box;display:-webkit-flex;display:-ms-flexbox;display:flex;width:100%;-webkit-flex:1;-ms-flex:1;flex:1;max-width:1326px;padding:4rem 0rem;}.dpcx27q h2{font-size:3.4rem;font-weight:bold;margin-bottom:1.2rem;}.dpcx27q h2:not(:first-of-type){margin-top:2.4rem;}.dpcx27q p:not(:last-child){margin-bottom:2.4rem;}
.d1pdl9cq{display:-webkit-box;display:-webkit-flex;display:-ms-flexbox;display:flex;-webkit-flex-direction:column;-ms-flex-direction:column;flex-direction:column;max-width:800px;margin:0 auto;}
.u7mx1fk{display:grid;grid-template-columns:repeat(auto-fit,minmax(200px,1fr));grid-gap:2rem;}
/*# sourceMappingURL=data:application/json;base64,*/