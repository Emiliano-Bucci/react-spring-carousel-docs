.d1exsjoj{display:-webkit-box;display:-webkit-flex;display:-ms-flexbox;display:flex;-webkit-box-pack:center;-webkit-justify-content:center;-ms-flex-pack:center;justify-content:center;margin:0.8rem 0;margin-top:2.4rem;}
.d3qmxio{display:-webkit-box;display:-webkit-flex;display:-ms-flexbox;display:flex;}.d3qmxio span{width:22px;height:6px;border-radius:20px;-webkit-transform:rotate(45deg);-ms-transform:rotate(45deg);transform:rotate(45deg);}
.shituyu{display:-webkit-box;display:-webkit-flex;display:-ms-flexbox;display:flex;-webkit-box-pack:center;-webkit-justify-content:center;-ms-flex-pack:center;justify-content:center;-webkit-align-items:center;-webkit-box-align:center;-ms-flex-align:center;align-items:center;background-color:#6A5A79;position:relative;}
.syo3bnd{background-color:#ED707D;}
.l1buzcyb{display:-webkit-box;display:-webkit-flex;display:-ms-flexbox;display:flex;-webkit-flex-direction:column;-ms-flex-direction:column;flex-direction:column;-webkit-align-items:center;-webkit-box-align:center;-ms-flex-align:center;align-items:center;-webkit-box-pack:start;-webkit-justify-content:flex-start;-ms-flex-pack:start;justify-content:flex-start;text-align:center;border-radius:12px;border:1px solid #ED707D;padding:1.6rem;-webkit-transition:all 280ms ease;transition:all 280ms ease;box-shadow:0px 1.5px 3.8px rgba(0,0,0,0.03), 0px 6px 15px rgba(0,0,0,0.06);}.l1buzcyb:hover{box-shadow:0.9px 0.9px 2px rgba(0,0,0,0.009), 3.1px 2.9px 6.7px rgba(97,66,66,0.016), 2px 13px 30px rgba(0,0,0,0.12);}.l1buzcyb:hover svg{fill:#ED707D;}
.dmv8uqg{min-width:32px;min-height:32px;margin-bottom:0.8rem;}
.cpcx27q{fill:#BA6980;-webkit-transition:all 280ms ease;transition:all 280ms ease;}
.h1pdl9cq{font-size:1.8rem;}
.s7mx1fk{font-size:1.48rem;}
.dhp85jm{display:-webkit-box;display:-webkit-flex;display:-ms-flexbox;display:flex;-webkit-box-pack:center;-webkit-justify-content:center;-ms-flex-pack:center;justify-content:center;margin:0 auto;width:100%;-webkit-flex:1;-ms-flex:1;flex:1;}
.dqmj6t5{display:-webkit-box;display:-webkit-flex;display:-ms-flexbox;display:flex;width:100%;-webkit-flex:1;-ms-flex:1;flex:1;max-width:1326px;padding:4rem 0rem;}.dqmj6t5 h2{font-size:3.4rem;font-weight:bold;margin-bottom:2rem;color:#BA6980;position:relative;}.dqmj6t5 h2::before{content:"";position:absolute;top:100%;left:0;width:100%;height:4px;border-radius:20px;background-image:linear-gradient( to right, #6A5A79, #ED707D );}.dqmj6t5 h2:not(:first-of-type){margin-top:2.4rem;}.dqmj6t5 p:not(:last-child){margin-bottom:2.4rem;}
.dm47giv{display:-webkit-box;display:-webkit-flex;display:-ms-flexbox;display:flex;-webkit-flex-direction:column;-ms-flex-direction:column;flex-direction:column;max-width:800px;margin:0 auto;}
.h8nc2ny{margin-bottom:2.4rem;}
.uh2nq9k{display:grid;grid-template-columns:repeat(auto-fit,minmax(200px,1fr));grid-gap:2rem;}
/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInBhZ2VzL2RvY3MudHN4Il0sIm5hbWVzIjpbIi5kMWV4c2pvaiIsIi5kM3FteGlvIiwiLnNoaXR1eXUiLCIuc3lvM2JuZCIsIi5sMWJ1emN5YiIsIi5kbXY4dXFnIiwiLmNwY3gyN3EiLCIuaDFwZGw5Y3EiLCIuczdteDFmayIsIi5kaHA4NWptIiwiLmRxbWo2dDUiLCIuZG00N2dpdiIsIi5oOG5jMm55IiwiLnVoMm5xOWsiXSwibWFwcGluZ3MiOiJBQVNnQkE7QUFRRUM7QUFXRUM7QUFTQUM7QUFZSkM7QUF1QkVDO0FBT0VDO0FBT0ZDO0FBT0FDO0FBYUZDO0FBU0VDO0FBc0NFQztBQW9ERUM7QUFhQUMiLCJmaWxlIjoicGFnZXMvZG9jcy50c3giLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyBjc3MgfSBmcm9tIFwibGluYXJpYVwiO1xuaW1wb3J0IENoZWNrZWRTVkcgZnJvbSBcInB1YmxpYy9jaGVja2VkLnN2Z1wiO1xuaW1wb3J0IHsgUHJvcHNXaXRoQ2hpbGRyZW4gfSBmcm9tIFwicmVhY3RcIjtcbmltcG9ydCB7IGNvbG9ycyB9IGZyb20gXCJzcmMvdGhlbWVcIjtcbmltcG9ydCB7IEhpZ2hsaWdodFRleHQgfSBmcm9tIFwiYXRvbXMvSGlnaGxpZ2h0VGV4dFwiO1xuXG5mdW5jdGlvbiBEZWNvcmF0b3IoKSB7XG4gIHJldHVybiAoXG4gICAgPGRpdlxuICAgICAgY2xhc3NOYW1lPXtjc3NgXG4gICAgICAgIGRpc3BsYXk6IGZsZXg7XG4gICAgICAgIGp1c3RpZnktY29udGVudDogY2VudGVyO1xuICAgICAgICBtYXJnaW46IDAuOHJlbSAwO1xuICAgICAgICBtYXJnaW4tdG9wOiAyLjRyZW07XG4gICAgICBgfVxuICAgID5cbiAgICAgIDxkaXZcbiAgICAgICAgY2xhc3NOYW1lPXtjc3NgXG4gICAgICAgICAgZGlzcGxheTogZmxleDtcbiAgICAgICAgICBzcGFuIHtcbiAgICAgICAgICAgIHdpZHRoOiAyMnB4O1xuICAgICAgICAgICAgaGVpZ2h0OiA2cHg7XG4gICAgICAgICAgICBib3JkZXItcmFkaXVzOiAyMHB4O1xuICAgICAgICAgICAgdHJhbnNmb3JtOiByb3RhdGUoNDVkZWcpO1xuICAgICAgICAgIH1cbiAgICAgICAgYH1cbiAgICAgID5cbiAgICAgICAgPHNwYW5cbiAgICAgICAgICBjbGFzc05hbWU9e2Nzc2BcbiAgICAgICAgICAgIGRpc3BsYXk6IGZsZXg7XG4gICAgICAgICAgICBqdXN0aWZ5LWNvbnRlbnQ6IGNlbnRlcjtcbiAgICAgICAgICAgIGFsaWduLWl0ZW1zOiBjZW50ZXI7XG4gICAgICAgICAgICBiYWNrZ3JvdW5kLWNvbG9yOiAke2NvbG9ycy5wcmltYXJ5TGlnaHR9O1xuICAgICAgICAgICAgcG9zaXRpb246IHJlbGF0aXZlO1xuICAgICAgICAgIGB9XG4gICAgICAgIC8+XG4gICAgICAgIDxzcGFuXG4gICAgICAgICAgY2xhc3NOYW1lPXtjc3NgXG4gICAgICAgICAgICBiYWNrZ3JvdW5kLWNvbG9yOiAke2NvbG9ycy5zZWNvbmRhcnlMaWdodH07XG4gICAgICAgICAgYH1cbiAgICAgICAgLz5cbiAgICAgIDwvZGl2PlxuICAgIDwvZGl2PlxuICApO1xufVxuXG5mdW5jdGlvbiBMaXN0SXRlbSh7IHRpdGxlLCBjaGlsZHJlbiB9OiBQcm9wc1dpdGhDaGlsZHJlbjx7IHRpdGxlOiBzdHJpbmcgfT4pIHtcbiAgcmV0dXJuIChcbiAgICA8bGlcbiAgICAgIGNsYXNzTmFtZT17Y3NzYFxuICAgICAgICBkaXNwbGF5OiBmbGV4O1xuICAgICAgICBmbGV4LWRpcmVjdGlvbjogY29sdW1uO1xuICAgICAgICBhbGlnbi1pdGVtczogY2VudGVyO1xuICAgICAgICBqdXN0aWZ5LWNvbnRlbnQ6IGZsZXgtc3RhcnQ7XG4gICAgICAgIHRleHQtYWxpZ246IGNlbnRlcjtcbiAgICAgICAgYm9yZGVyLXJhZGl1czogMTJweDtcbiAgICAgICAgYm9yZGVyOiAxcHggc29saWQgJHtjb2xvcnMuc2Vjb25kYXJ5TGlnaHR9O1xuICAgICAgICBwYWRkaW5nOiAxLjZyZW07XG4gICAgICAgIHRyYW5zaXRpb246IGFsbCAyODBtcyBlYXNlO1xuICAgICAgICBib3gtc2hhZG93OiAwcHggMS41cHggMy44cHggcmdiYSgwLCAwLCAwLCAwLjAzKSxcbiAgICAgICAgICAwcHggNnB4IDE1cHggcmdiYSgwLCAwLCAwLCAwLjA2KTtcbiAgICAgICAgOmhvdmVyIHtcbiAgICAgICAgICBib3gtc2hhZG93OiAwLjlweCAwLjlweCAycHggcmdiYSgwLCAwLCAwLCAwLjAwOSksXG4gICAgICAgICAgICAzLjFweCAyLjlweCA2LjdweCByZ2JhKDk3LCA2NiwgNjYsIDAuMDE2KSxcbiAgICAgICAgICAgIDJweCAxM3B4IDMwcHggcmdiYSgwLCAwLCAwLCAwLjEyKTtcbiAgICAgICAgICBzdmcge1xuICAgICAgICAgICAgZmlsbDogJHtjb2xvcnMuc2Vjb25kYXJ5TGlnaHR9O1xuICAgICAgICAgIH1cbiAgICAgICAgfVxuICAgICAgYH1cbiAgICA+XG4gICAgICA8ZGl2XG4gICAgICAgIGNsYXNzTmFtZT17Y3NzYFxuICAgICAgICAgIG1pbi13aWR0aDogMzJweDtcbiAgICAgICAgICBtaW4taGVpZ2h0OiAzMnB4O1xuICAgICAgICAgIG1hcmdpbi1ib3R0b206IDAuOHJlbTtcbiAgICAgICAgYH1cbiAgICAgID5cbiAgICAgICAgPENoZWNrZWRTVkdcbiAgICAgICAgICBjbGFzc05hbWU9e2Nzc2BcbiAgICAgICAgICAgIGZpbGw6ICR7Y29sb3JzLnNlY29uZGFyeX07XG4gICAgICAgICAgICB0cmFuc2l0aW9uOiBhbGwgMjgwbXMgZWFzZTtcbiAgICAgICAgICBgfVxuICAgICAgICAvPlxuICAgICAgPC9kaXY+XG4gICAgICA8aDNcbiAgICAgICAgY2xhc3NOYW1lPXtjc3NgXG4gICAgICAgICAgZm9udC1zaXplOiAxLjhyZW07XG4gICAgICAgIGB9XG4gICAgICA+XG4gICAgICAgIDxzdHJvbmc+e3RpdGxlfTwvc3Ryb25nPlxuICAgICAgPC9oMz5cbiAgICAgIDxzcGFuXG4gICAgICAgIGNsYXNzTmFtZT17Y3NzYFxuICAgICAgICAgIGZvbnQtc2l6ZTogMS40OHJlbTtcbiAgICAgICAgYH1cbiAgICAgID5cbiAgICAgICAge2NoaWxkcmVufVxuICAgICAgPC9zcGFuPlxuICAgIDwvbGk+XG4gICk7XG59XG5cbmV4cG9ydCBkZWZhdWx0IGZ1bmN0aW9uIERvY3MoKSB7XG4gIHJldHVybiAoXG4gICAgPGRpdlxuICAgICAgY2xhc3NOYW1lPXtjc3NgXG4gICAgICAgIGRpc3BsYXk6IGZsZXg7XG4gICAgICAgIGp1c3RpZnktY29udGVudDogY2VudGVyO1xuICAgICAgICBtYXJnaW46IDAgYXV0bztcbiAgICAgICAgd2lkdGg6IDEwMCU7XG4gICAgICAgIGZsZXg6IDE7XG4gICAgICBgfVxuICAgID5cbiAgICAgIDxkaXZcbiAgICAgICAgY2xhc3NOYW1lPXtjc3NgXG4gICAgICAgICAgZGlzcGxheTogZmxleDtcbiAgICAgICAgICB3aWR0aDogMTAwJTtcbiAgICAgICAgICBmbGV4OiAxO1xuICAgICAgICAgIG1heC13aWR0aDogMTMyNnB4O1xuICAgICAgICAgIHBhZGRpbmc6IDRyZW0gMHJlbTtcbiAgICAgICAgICBoMiB7XG4gICAgICAgICAgICBmb250LXNpemU6IDMuNHJlbTtcbiAgICAgICAgICAgIGZvbnQtd2VpZ2h0OiBib2xkO1xuICAgICAgICAgICAgbWFyZ2luLWJvdHRvbTogMnJlbTtcbiAgICAgICAgICAgIGNvbG9yOiAke2NvbG9ycy5zZWNvbmRhcnl9O1xuICAgICAgICAgICAgcG9zaXRpb246IHJlbGF0aXZlO1xuICAgICAgICAgICAgOjpiZWZvcmUge1xuICAgICAgICAgICAgICBjb250ZW50OiBcIlwiO1xuICAgICAgICAgICAgICBwb3NpdGlvbjogYWJzb2x1dGU7XG4gICAgICAgICAgICAgIHRvcDogMTAwJTtcbiAgICAgICAgICAgICAgbGVmdDogMDtcbiAgICAgICAgICAgICAgd2lkdGg6IDEwMCU7XG4gICAgICAgICAgICAgIGhlaWdodDogNHB4O1xuICAgICAgICAgICAgICBib3JkZXItcmFkaXVzOiAyMHB4O1xuICAgICAgICAgICAgICBiYWNrZ3JvdW5kLWltYWdlOiBsaW5lYXItZ3JhZGllbnQoXG4gICAgICAgICAgICAgICAgdG8gcmlnaHQsXG4gICAgICAgICAgICAgICAgJHtjb2xvcnMucHJpbWFyeUxpZ2h0fSxcbiAgICAgICAgICAgICAgICAke2NvbG9ycy5zZWNvbmRhcnlMaWdodH1cbiAgICAgICAgICAgICAgKTtcbiAgICAgICAgICAgIH1cbiAgICAgICAgICAgICY6bm90KDpmaXJzdC1vZi10eXBlKSB7XG4gICAgICAgICAgICAgIG1hcmdpbi10b3A6IDIuNHJlbTtcbiAgICAgICAgICAgIH1cbiAgICAgICAgICB9XG4gICAgICAgICAgcCB7XG4gICAgICAgICAgICAmOm5vdCg6bGFzdC1jaGlsZCkge1xuICAgICAgICAgICAgICBtYXJnaW4tYm90dG9tOiAyLjRyZW07XG4gICAgICAgICAgICB9XG4gICAgICAgICAgfVxuICAgICAgICBgfVxuICAgICAgPlxuICAgICAgICA8ZGl2XG4gICAgICAgICAgY2xhc3NOYW1lPXtjc3NgXG4gICAgICAgICAgICBkaXNwbGF5OiBmbGV4O1xuICAgICAgICAgICAgZmxleC1kaXJlY3Rpb246IGNvbHVtbjtcbiAgICAgICAgICAgIG1heC13aWR0aDogODAwcHg7XG4gICAgICAgICAgICBtYXJnaW46IDAgYXV0bztcbiAgICAgICAgICBgfVxuICAgICAgICA+XG4gICAgICAgICAgPGgyPk92ZXJ2aWV3PC9oMj5cbiAgICAgICAgICA8cD5cbiAgICAgICAgICAgIDxzdHJvbmc+UmVhY3QgU3ByaW5nIENhcm91c2VsPC9zdHJvbmc+IGlzIGEgbmV3IHdheSBvZiBpbnRlbmQgdGhlXG4gICAgICAgICAgICBjYXJvdXNlbCBleHBlcmllbmNlIGluIHRoZSB3ZWIuIEl0IGVtYnJhY2VzIHRoZSBwaGlsb3NvcGh5IG9me1wiIFwifVxuICAgICAgICAgICAgPHN0cm9uZz5IZWFkbGVzcyBVSTwvc3Ryb25nPiwgd2hpY2ggbWVhbnMgdGhhdCBpdCdzIHVwIHRvIHRoZVxuICAgICAgICAgICAgZGV2ZWxvcGVyIHRvIGRlY2lkZSBob3cgaXQgd2lsbCBsb29rLCB3aGlsZSB0aGUgbGlicmFyeSB3aWxsIG9ubHlcbiAgICAgICAgICAgIHRha2UgY2FyZSBhYm91dCB0aGUgaW50ZXJuYWwgbG9naWMgYW5kIHRoZSBiZWhhdmlvciBvZiB0aGUgY2Fyb3VzZWwuXG4gICAgICAgICAgPC9wPlxuICAgICAgICAgIDxwPlxuICAgICAgICAgICAgV2l0aCA8c3Ryb25nPlJlYWN0IFNwcmluZyBDYXJvdXNlbDwvc3Ryb25nPiB5b3UnbGwgZmVlbCBmb3IgdGhlXG4gICAgICAgICAgICBmaXJzdCB0aW1lIHRoYXQgeW91IGhhdmUgdG90YWwgY29udHJvbCBvbiBob3cgdGhlIENhcm91c2VsIGJlaGF2ZXMsXG4gICAgICAgICAgICBhbmQgeW91J2xsIGZpbmQgaG93J3MgZWFzeSB0byBpbnRlcmFjdCB3aXRoIGl0LCBob3cgc2ltcGxlIGlzIHRvIHB1dFxuICAgICAgICAgICAgdGhpbmdzIGluIHRoZSBzY3JlZW4sIGFuZCBob3cgZHVtYiBpcyB0byBtYWtlIHRoZSBjYXJvdXNlbHtcIiBcIn1cbiAgICAgICAgICAgIDxzdHJvbmc+d29yazwvc3Ryb25nPi5cbiAgICAgICAgICA8L3A+XG4gICAgICAgICAgPHA+XG4gICAgICAgICAgICA8c3Ryb25nPlJlYWN0IFNwcmluZyBDYXJvdXNlbDwvc3Ryb25nPiBhbHNvIGVtYnJhY2VzIHRoZSBmdWxsIHBvd2VyXG4gICAgICAgICAgICBvZiB0aGUgbmV3ZXN0IFJlYWN0IHRlY2hub2xvZ3ksIG9mZmVyaW5nIDxzdHJvbmc+SG9va3M8L3N0cm9uZz4gYW5ke1wiIFwifVxuICAgICAgICAgICAgPHN0cm9uZz5Db250ZXh0PC9zdHJvbmc+IHRvIGNyZWF0ZSBhbmQgbWFuaXB1bGF0ZSB0aGUgYmVoYXZpb3Igb2ZcbiAgICAgICAgICAgIHRoZSBjYXJvdXNlbCBpbiBhbnkgcG9zc2libGUgd2F5LlxuICAgICAgICAgIDwvcD5cbiAgICAgICAgICA8RGVjb3JhdG9yIC8+XG4gICAgICAgICAgPGgyPk1vdGl2YXRpb248L2gyPlxuICAgICAgICAgIDxwPlxuICAgICAgICAgICAgPHN0cm9uZz5XaHkgYW5vdGhlciBjYXJvdXNlbCBsaWJyYXJ5Pzwvc3Ryb25nPiBNYW55IHRpbWVzIGhhcHBlbmVkXG4gICAgICAgICAgICB0byBtZSB0aGF0IHdoaWxlIGkgd2FzIGludmVzdGlnYXRpbmcgd2hpY2ggbGlicmFyeSB0byBpbXBsZW1lbnQgYVxuICAgICAgICAgICAgY2Fyb3VzZWwgaSBjb3VsZCB1c2UgaW4gbXkgbmV3IHByb2plY3QsIGkgYWx3YXlzIGhhZCB0aGUgZmVlbGluZ1xuICAgICAgICAgICAgdGhhdCB0aGVyZSB3YXMgc29tZXRoaW5nIHdyb25nIHdpdGggc29tZXRoaW5nIChpbXBsZW1lbnRhdGlvbixcbiAgICAgICAgICAgIGxvZ2ljLCBhbmltYXRpb24gcmVzdWx0LCBlY2MpXG4gICAgICAgICAgPC9wPlxuICAgICAgICAgIDxwPlxuICAgICAgICAgICAgRG9uJ3QgZ2V0IG1lIHdyb25nLCB0aGVyZSdyZSBsb3RzIG9mIGdvb2QgbGlicmFyaWVzIG91dCB0aGVyZSwgYnV0XG4gICAgICAgICAgICBzdGlsbCBpIGRpZG4ndCBmZWVsIGVub3VnaCBmcmVlIHJlZ2FyZGluZyB0aGUgaW1wbGVtZW50YXRpb24gb2YgdGhlXG4gICAgICAgICAgICBjYXJvdXNlbCBhdCBhbGwuIEkgYWx3YXlzIGhhZCB0aGUgZmVlbGluZyB0aGF0IGkgd2FzIGRvaW5nIHNvbWUga2luZFxuICAgICAgICAgICAgb2YgaGFjayB0byBtYWtlIGl0IHdvcmsgYW5kIGZpdCBpbnNpZGUgbXkgVUkuIEl0IHdhc24ndCBzb21ldGhpbmdcbiAgICAgICAgICAgIG5hdHVyYWwsIGFuZCB0aGF0IGZlZWxpbmcgYWx3YXlzIGJvdGhlcmVkIG1lLlxuICAgICAgICAgIDwvcD5cbiAgICAgICAgICA8cD5cbiAgICAgICAgICAgIFdpdGggPHN0cm9uZz5SZWFjdCBTcHJpbmcgQ2Fyb3VzZWw8L3N0cm9uZz4geW91J3JlIGZyZWUgdG8gY3JlYXRlXG4gICAgICAgICAgICBhbmQgY29tcG9zZSB5b3VyIG93biBjYXJvdXNlbCB3aXRob3V0IGFueSBraW5kIG9mIGJvdW5kcywgd2l0aG91dFxuICAgICAgICAgICAgaGF2aW5nIHRvIG92ZXJyaWRlIHN0eWxlcyBvciBhZGRpbmcgd2VpcmQgY2xhc3MgbmFtZXMsIG9yIHNvbWUgb3RoZXJcbiAgICAgICAgICAgIGtpbmQgb2Ygc3RyYW5nZSBoYWNrLCBhbmQgYW5pbWF0aW9ucyBmZWVsIG5hdHVyYWxzIGFuZCByZWFscy4gVGhleVxuICAgICAgICAgICAgcmVzcG9uZCB0byB1c2VyIGludGVyYWN0aW9uIGxpa2UgeW91J3ZlIGFsd2F5cyBleHBlY3RlZCB0byBkby5cbiAgICAgICAgICA8L3A+XG4gICAgICAgICAgPEhpZ2hsaWdodFRleHRcbiAgICAgICAgICAgIGNsYXNzTmFtZT17Y3NzYFxuICAgICAgICAgICAgICBtYXJnaW4tYm90dG9tOiAyLjRyZW07XG4gICAgICAgICAgICBgfVxuICAgICAgICAgID5cbiAgICAgICAgICAgIDxwPlxuICAgICAgICAgICAgICA8c3Ryb25nPlJlYWN0IFNwcmluZyBDYXJvdXNlbDwvc3Ryb25nPiBpc3tcIiBcIn1cbiAgICAgICAgICAgICAgPHN0cm9uZz5pbnR1aXRpdmU8L3N0cm9uZz4sIDxzdHJvbmc+c2ltcGxlPC9zdHJvbmc+IGFuZHtcIiBcIn1cbiAgICAgICAgICAgICAgPHN0cm9uZz5lZmZpY2llbnQ8L3N0cm9uZz4uXG4gICAgICAgICAgICA8L3A+XG4gICAgICAgICAgPC9IaWdobGlnaHRUZXh0PlxuICAgICAgICAgIDxEZWNvcmF0b3IgLz5cbiAgICAgICAgICA8aDI+RmVhdHVyZXM8L2gyPlxuICAgICAgICAgIDx1bFxuICAgICAgICAgICAgY2xhc3NOYW1lPXtjc3NgXG4gICAgICAgICAgICAgIGRpc3BsYXk6IGdyaWQ7XG4gICAgICAgICAgICAgIGdyaWQtdGVtcGxhdGUtY29sdW1uczogcmVwZWF0KGF1dG8tZml0LCBtaW5tYXgoMjAwcHgsIDFmcikpO1xuICAgICAgICAgICAgICBncmlkLWdhcDogMnJlbTtcbiAgICAgICAgICAgIGB9XG4gICAgICAgICAgPlxuICAgICAgICAgICAgPExpc3RJdGVtIHRpdGxlPVwiUGVyZm9ybWFuY2VcIj5cbiAgICAgICAgICAgICAgVGhhbmtzIHRvIFJlYWN0IFNwcmluZywgcGVyZm9ybWFuY2VzIGFyZSBvbiB0b3AhXG4gICAgICAgICAgICA8L0xpc3RJdGVtPlxuICAgICAgICAgICAgPExpc3RJdGVtIHRpdGxlPVwiTW9iaWxlXCI+XG4gICAgICAgICAgICAgIDxzdHJvbmc+QHVzZS1nZXN0dXJlPC9zdHJvbmc+IG9mZmVycyBhbiBleGNlbGVudCBtb2JpbGUgZXhwZXJpZW5jZVxuICAgICAgICAgICAgICBvdXQgb2YgdGhlIGJveCFcbiAgICAgICAgICAgIDwvTGlzdEl0ZW0+XG4gICAgICAgICAgICA8TGlzdEl0ZW0gdGl0bGU9XCJSZXNpemFibGVcIj5cbiAgICAgICAgICAgICAgVGhlIGNhcm91c2VsIHdpbGwgbGlzdGVuIHRvIGFueSByZXNpemUgZXZlbnQgYW5kIHdpbGwgcmUtYWRhcHRcbiAgICAgICAgICAgICAgaXRzZWxmIGFjY29yZGluZ2x5LlxuICAgICAgICAgICAgPC9MaXN0SXRlbT5cbiAgICAgICAgICAgIDxMaXN0SXRlbSB0aXRsZT1cIlNsaWRlIHR5cGVzXCI+XG4gICAgICAgICAgICAgIFlvdSBoYXZlIGRpZmZlcmVudCB0eXBlcyBvZiBzY3JvbGwgc29sdXRpb25zIHRvIGNob29zZSB3aXRoLlxuICAgICAgICAgICAgPC9MaXN0SXRlbT5cbiAgICAgICAgICAgIDxMaXN0SXRlbSB0aXRsZT1cIkhlYWRsZXNzIFVJXCI+XG4gICAgICAgICAgICAgIFlvdSBjYW4gY29tcG9zZSBhbGwgdGhlIHBpZWNlcyBvZiB0aGUgQ2Fyb3VzZWwgaW4gYW55IHdheSB5b3VcbiAgICAgICAgICAgICAgd2FudC5cbiAgICAgICAgICAgIDwvTGlzdEl0ZW0+XG4gICAgICAgICAgICA8TGlzdEl0ZW0gdGl0bGU9XCJGdWxsc2NyZWVuIGNhcGFibGVcIj5cbiAgICAgICAgICAgICAgV2UgdXNlIDxzdHJvbmc+c2NyZWVuZnVsbC5qczwvc3Ryb25nPiB0byBvZmZlciBhIGNyb3NzIGJyb3dzZXJcbiAgICAgICAgICAgICAgZWZmaWNpZW50IHNvbHV0aW9uLlxuICAgICAgICAgICAgPC9MaXN0SXRlbT5cbiAgICAgICAgICA8L3VsPlxuICAgICAgICA8L2Rpdj5cbiAgICAgIDwvZGl2PlxuICAgIDwvZGl2PlxuICApO1xufVxuIl19*/