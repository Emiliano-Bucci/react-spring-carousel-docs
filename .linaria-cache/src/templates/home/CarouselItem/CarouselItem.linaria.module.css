.d1e5ddm{display:-webkit-box;display:-webkit-flex;display:-ms-flexbox;display:flex;-webkit-box-pack:center;-webkit-justify-content:center;-ms-flex-pack:center;justify-content:center;width:100%;height:100%;-webkit-user-select:none;-moz-user-select:none;-ms-user-select:none;user-select:none;}.d1e5ddm[data-active="true"]{z-index:10;}.d1e5ddm[data-active="true"] > *{box-shadow:0.9px 0.9px 2px rgba(0,0,0,0.009), 3.1px 2.9px 6.7px rgba(97,66,66,0.016), 4px 12px 30px 4px rgba(0,0,0,0.12);}.d1e5ddm[data-active="true"] .icon-wrapper svg{fill:#ED707D;opacity:1;}
.c11uajlj{display:-webkit-box;display:-webkit-flex;display:-ms-flexbox;display:flex;-webkit-flex-direction:column;-ms-flex-direction:column;flex-direction:column;-webkit-align-items:center;-webkit-box-align:center;-ms-flex-align:center;align-items:center;-webkit-box-pack:center;-webkit-justify-content:center;-ms-flex-pack:center;justify-content:center;background-color:#fff;max-width:280px;width:100%;border-radius:8px;padding:2.4rem;-webkit-transition:box-shadow 480ms ease;transition:box-shadow 480ms ease;box-shadow:0.9px 0.9px 2px rgba(0,0,0,0.009), 3.1px 2.9px 6.7px rgba(97,66,66,0.016), 14px 13px 30px rgba(0,0,0,0.08);}
.d1ylfuz6{width:72px;height:72px;max-width:72px;margin-bottom:0.8rem;}.d1ylfuz6 svg{-webkit-transition:all 480ms ease;transition:all 480ms ease;fill:#314778;opacity:0.48;}
.he5c851{font-size:2rem;font-weight:bold;margin-bottom:0.8rem;text-align:center;}
.s1ywem0i{text-align:center;}
/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNyYy90ZW1wbGF0ZXMvaG9tZS9DYXJvdXNlbEl0ZW0vQ2Fyb3VzZWxJdGVtLnRzeCJdLCJuYW1lcyI6WyIuZDFlNWRkbSIsIi5jMTF1YWpsaiIsIi5kMXlsZnV6NiIsIi5oZTVjODUxIiwiLnMxeXdlbTBpIl0sIm1hcHBpbmdzIjoiQUErQmdCQTtBQXNCRUM7QUFpQkdDO0FBa0JEQztBQVVBQyIsImZpbGUiOiJzcmMvdGVtcGxhdGVzL2hvbWUvQ2Fyb3VzZWxJdGVtL0Nhcm91c2VsSXRlbS50c3giLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyBjc3MsIGN4IH0gZnJvbSBcImxpbmFyaWFcIjtcbmltcG9ydCB7IHVzZVNwcmluZ0Nhcm91c2VsQ29udGV4dCB9IGZyb20gXCJyZWFjdC1zcHJpbmctY2Fyb3VzZWxcIjtcbmltcG9ydCB7IEZDIH0gZnJvbSBcInJlYWN0XCI7XG5pbXBvcnQgeyBhbmltYXRlZCwgdXNlU3ByaW5nIH0gZnJvbSBcInJlYWN0LXNwcmluZ1wiO1xuaW1wb3J0IHsgY29sb3JzIH0gZnJvbSBcIi4uLy4uLy4uL3RoZW1lXCI7XG5cbmV4cG9ydCBmdW5jdGlvbiBDYXJvdXNlbEl0ZW0oe1xuICB0aXRsZSxcbiAgY29udGVudCxcbiAgSWNvbixcbiAgYWN0aXZlSXRlbSxcbiAgaWQsXG59OiB7XG4gIHRpdGxlOiBzdHJpbmc7XG4gIGNvbnRlbnQ6IFJlYWN0LlJlYWN0Tm9kZTtcbiAgSWNvbjogRkM7XG4gIGFjdGl2ZUl0ZW06IHN0cmluZztcbiAgaWQ6IHN0cmluZztcbn0pIHtcbiAgY29uc3QgeyBnZXRJc05leHRJdGVtLCBnZXRJc1ByZXZJdGVtIH0gPSB1c2VTcHJpbmdDYXJvdXNlbENvbnRleHQoKTtcbiAgY29uc3QgaXNBY3RpdmUgPSBhY3RpdmVJdGVtID09PSBpZDtcbiAgY29uc3Qgc3R5bGVzID0gdXNlU3ByaW5nKHtcbiAgICBzY2FsZTogaXNBY3RpdmVcbiAgICAgID8gMS4wOFxuICAgICAgOiBnZXRJc05leHRJdGVtKGlkKSB8fCBnZXRJc1ByZXZJdGVtKGlkKVxuICAgICAgPyAwLjlcbiAgICAgIDogMC43OCxcbiAgfSk7XG4gIHJldHVybiAoXG4gICAgPGRpdlxuICAgICAgZGF0YS1hY3RpdmU9e2lzQWN0aXZlfVxuICAgICAgY2xhc3NOYW1lPXtjc3NgXG4gICAgICAgIGRpc3BsYXk6IGZsZXg7XG4gICAgICAgIGp1c3RpZnktY29udGVudDogY2VudGVyO1xuICAgICAgICB3aWR0aDogMTAwJTtcbiAgICAgICAgaGVpZ2h0OiAxMDAlO1xuICAgICAgICB1c2VyLXNlbGVjdDogbm9uZTtcbiAgICAgICAgJltkYXRhLWFjdGl2ZT1cInRydWVcIl0ge1xuICAgICAgICAgIHotaW5kZXg6IDEwO1xuICAgICAgICAgICYgPiAqIHtcbiAgICAgICAgICAgIGJveC1zaGFkb3c6IDAuOXB4IDAuOXB4IDJweCByZ2JhKDAsIDAsIDAsIDAuMDA5KSxcbiAgICAgICAgICAgICAgMy4xcHggMi45cHggNi43cHggcmdiYSg5NywgNjYsIDY2LCAwLjAxNiksXG4gICAgICAgICAgICAgIDRweCAxMnB4IDMwcHggNHB4IHJnYmEoMCwgMCwgMCwgMC4xMik7XG4gICAgICAgICAgfVxuICAgICAgICAgIC5pY29uLXdyYXBwZXIgc3ZnIHtcbiAgICAgICAgICAgIGZpbGw6ICR7Y29sb3JzLnNlY29uZGFyeUxpZ2h0fTtcbiAgICAgICAgICAgIG9wYWNpdHk6IDE7XG4gICAgICAgICAgfVxuICAgICAgICB9XG4gICAgICBgfVxuICAgID5cbiAgICAgIDxhbmltYXRlZC5hcnRpY2xlXG4gICAgICAgIHN0eWxlPXtzdHlsZXN9XG4gICAgICAgIGNsYXNzTmFtZT17Y3NzYFxuICAgICAgICAgIGRpc3BsYXk6IGZsZXg7XG4gICAgICAgICAgZmxleC1kaXJlY3Rpb246IGNvbHVtbjtcbiAgICAgICAgICBhbGlnbi1pdGVtczogY2VudGVyO1xuICAgICAgICAgIGp1c3RpZnktY29udGVudDogY2VudGVyO1xuICAgICAgICAgIGJhY2tncm91bmQtY29sb3I6ICNmZmY7XG4gICAgICAgICAgbWF4LXdpZHRoOiAyODBweDtcbiAgICAgICAgICB3aWR0aDogMTAwJTtcbiAgICAgICAgICBib3JkZXItcmFkaXVzOiA4cHg7XG4gICAgICAgICAgcGFkZGluZzogMi40cmVtO1xuICAgICAgICAgIHRyYW5zaXRpb246IGJveC1zaGFkb3cgNDgwbXMgZWFzZTtcbiAgICAgICAgICBib3gtc2hhZG93OiAwLjlweCAwLjlweCAycHggcmdiYSgwLCAwLCAwLCAwLjAwOSksXG4gICAgICAgICAgICAzLjFweCAyLjlweCA2LjdweCByZ2JhKDk3LCA2NiwgNjYsIDAuMDE2KSxcbiAgICAgICAgICAgIDE0cHggMTNweCAzMHB4IHJnYmEoMCwgMCwgMCwgMC4wOCk7XG4gICAgICAgIGB9XG4gICAgICA+XG4gICAgICAgIDxkaXZcbiAgICAgICAgICBjbGFzc05hbWU9e2N4KFxuICAgICAgICAgICAgY3NzYFxuICAgICAgICAgICAgICB3aWR0aDogNzJweDtcbiAgICAgICAgICAgICAgaGVpZ2h0OiA3MnB4O1xuICAgICAgICAgICAgICBtYXgtd2lkdGg6IDcycHg7XG4gICAgICAgICAgICAgIG1hcmdpbi1ib3R0b206IDAuOHJlbTtcbiAgICAgICAgICAgICAgc3ZnIHtcbiAgICAgICAgICAgICAgICB0cmFuc2l0aW9uOiBhbGwgNDgwbXMgZWFzZTtcbiAgICAgICAgICAgICAgICBmaWxsOiAke2NvbG9ycy5wcmltYXJ5fTtcbiAgICAgICAgICAgICAgICBvcGFjaXR5OiAwLjQ4O1xuICAgICAgICAgICAgICB9XG4gICAgICAgICAgICBgLFxuICAgICAgICAgICAgXCJpY29uLXdyYXBwZXJcIlxuICAgICAgICAgICl9XG4gICAgICAgID5cbiAgICAgICAgICA8SWNvbiAvPlxuICAgICAgICA8L2Rpdj5cbiAgICAgICAgPGgzXG4gICAgICAgICAgY2xhc3NOYW1lPXtjc3NgXG4gICAgICAgICAgICBmb250LXNpemU6IDJyZW07XG4gICAgICAgICAgICBmb250LXdlaWdodDogYm9sZDtcbiAgICAgICAgICAgIG1hcmdpbi1ib3R0b206IDAuOHJlbTtcbiAgICAgICAgICAgIHRleHQtYWxpZ246IGNlbnRlcjtcbiAgICAgICAgICBgfVxuICAgICAgICA+XG4gICAgICAgICAge3RpdGxlfVxuICAgICAgICA8L2gzPlxuICAgICAgICA8c3BhblxuICAgICAgICAgIGNsYXNzTmFtZT17Y3NzYFxuICAgICAgICAgICAgdGV4dC1hbGlnbjogY2VudGVyO1xuICAgICAgICAgIGB9XG4gICAgICAgID5cbiAgICAgICAgICB7Y29udGVudH1cbiAgICAgICAgPC9zcGFuPlxuICAgICAgPC9hbmltYXRlZC5hcnRpY2xlPlxuICAgIDwvZGl2PlxuICApO1xufVxuIl19*/